name: Publish

on:
  workflow_dispatch:
  release:
    types: [created]
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: ['9.x']
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install GitVersion # https://github.com/GitTools/actions/blob/main/docs/examples/github/gitversion/setup/usage-examples.md
        uses: gittools/actions/gitversion/setup@v0
        with:
          versionSpec: '5.x'

      - name: Compute Version
        id:   gitversion # id to later be referenced
        uses: gittools/actions/gitversion/execute@v0
        with:
          useConfigFile: true
          additionalArguments: '/updateprojectfiles'
  
      - name: Display GitVersion outputs (step output)
        run: |
            echo "Branch: ${{ github.ref }}"
            echo "Major: ${{ steps.gitversion.outputs.major }}"
            echo "Minor: ${{ steps.gitversion.outputs.minor }}"
            echo "Patch: ${{ steps.gitversion.outputs.patch }}"
            echo "PreReleaseTag: ${{ steps.gitversion.outputs.preReleaseTag }}"
            echo "PreReleaseTagWithDash: ${{ steps.gitversion.outputs.preReleaseTagWithDash }}"
            echo "PreReleaseLabel: ${{ steps.gitversion.outputs.preReleaseLabel }}"
            echo "PreReleaseNumber: ${{ steps.gitversion.outputs.preReleaseNumber }}"
            echo "WeightedPreReleaseNumber: ${{ steps.gitversion.outputs.weightedPreReleaseNumber }}"
            echo "BuildMetaData: ${{ steps.gitversion.outputs.buildMetaData }}"
            echo "BuildMetaDataPadded: ${{ steps.gitversion.outputs.buildMetaDataPadded }}"
            echo "FullBuildMetaData: ${{ steps.gitversion.outputs.fullBuildMetaData }}"
            echo "MajorMinorPatch: ${{ steps.gitversion.outputs.majorMinorPatch }}"
            echo "SemVer: ${{ steps.gitversion.outputs.semVer }}"
            echo "LegacySemVer: ${{ steps.gitversion.outputs.legacySemVer }}"
            echo "LegacySemVerPadded: ${{ steps.gitversion.outputs.legacySemVerPadded }}"
            echo "AssemblySemVer: ${{ steps.gitversion.outputs.assemblySemVer }}"
            echo "AssemblySemFileVer: ${{ steps.gitversion.outputs.assemblySemFileVer }}"
            echo "FullSemVer: ${{ steps.gitversion.outputs.fullSemVer }}"
            echo "InformationalVersion: ${{ steps.gitversion.outputs.informationalVersion }}"
            echo "BranchName: ${{ steps.gitversion.outputs.branchName }}"
            echo "EscapedBranchName: ${{ steps.gitversion.outputs.escapedBranchName }}"
            echo "Sha: ${{ steps.gitversion.outputs.sha }}"
            echo "ShortSha: ${{ steps.gitversion.outputs.shortSha }}"
            echo "NuGetVersionV2: ${{ steps.gitversion.outputs.nuGetVersionV2 }}"
            echo "NuGetVersion: ${{ steps.gitversion.outputs.nuGetVersion }}"
            echo "NuGetPreReleaseTagV2: ${{ steps.gitversion.outputs.nuGetPreReleaseTagV2 }}"
            echo "NuGetPreReleaseTag: ${{ steps.gitversion.outputs.nuGetPreReleaseTag }}"
            echo "VersionSourceSha: ${{ steps.gitversion.outputs.versionSourceSha }}"
            echo "CommitsSinceVersionSource: ${{ steps.gitversion.outputs.commitsSinceVersionSource }}"
            echo "CommitsSinceVersionSourcePadded: ${{ steps.gitversion.outputs.commitsSinceVersionSourcePadded }}"
            echo "UncommittedChanges: ${{ steps.gitversion.outputs.uncommittedChanges }}"
            echo "CommitDate: ${{ steps.gitversion.outputs.commitDate }}"

      - name: Setup .NET Core SDK ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ matrix.dotnet-version }}

      - name: Build
        run: dotnet build ./source/Cute --warnaserror --configuration Release

      - name: Pack
        run: dotnet pack --no-build ./source/Cute --configuration Release -o ./artifacts

      - name: Publish
        run: dotnet nuget push ./artifacts/Cute.*.nupkg --api-key ${{secrets.NUGET_API_KEY}} --source https://api.nuget.org/v3/index.json --skip-duplicate 
