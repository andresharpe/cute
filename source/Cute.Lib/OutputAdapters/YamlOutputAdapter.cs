using Cute.Lib.Enums;
using System.Text;
using YamlDotNet.Serialization;

namespace Cute.Lib.OutputAdapters;

internal class YamlOutputAdapter : OutputAdapterBase, IOutputAdapter
{
    private readonly StreamWriter _writer;

    private readonly ISerializer _yaml;

    public YamlOutputAdapter(string contentName, string? fileName) : base(fileName ?? contentName + ".yaml")
    {
        _yaml = new SerializerBuilder().Build();

        _writer = new(FileSource, false, Encoding.UTF8);

        _writer.WriteLine($"# Contentful model: {contentName}");
        _writer.WriteLine($"# generated by Contentful Update Tool");
        _writer.WriteLine($"# See: https://github.com/andresharpe/cut");
        _writer.WriteLine();
        _writer.WriteLine($"Items:");
    }

    public override void AddHeadings(IEnumerable<string> table)
    {
        // do nothing
    }

    public override void AddRow(IDictionary<string, object?> row, EntryState? state)
    {
        row.Add(StateColumnName, state?.ToString());
        var sb = new StringBuilder(_yaml.Serialize(row));
        sb.Replace("\n", "\n  ");
        sb.Length -= 2;

        _writer.Write("- ");
        _writer.WriteLine(sb.ToString());
    }

    public override void Dispose()
    {
        _writer.Dispose();
    }

    public override void Save()
    {
        _writer.Flush();
    }
}